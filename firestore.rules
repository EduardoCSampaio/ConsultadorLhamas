rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuth() && request.auth.token.admin == true;
    }

    // USER PROFILES
    // - Users can create their own profile on signup.
    // - Users can read/update their own profile.
    // - Admins can read/update any user profile.
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read, update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // ACTIVITY LOGS
    // - Only admins can read all logs.
    // - Users can't read this collection directly (they use a server action).
    // - Server actions (running with admin privileges) can write to it.
    match /activityLogs/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Only backend can write
    }
    
    // BATCH JOBS
    // - Users can only read their own batch jobs.
    // - Backend handles creation/updates.
    match /batches/{batchId} {
       allow read: if isOwner(resource.data.userId);
       allow write: if false; // Only backend can write
    }
    
    // WEBHOOK RESPONSES
    // - Nobody can read/write directly. Handled by backend/webhooks.
    match /webhookResponses/{responseId} {
      allow read, write: if false;
    }
    
    // INTERNAL COUNTERS
    // - Nobody can access directly.
    match /internal/{docId} {
      allow read, write: if false;
    }

    // TICKETS (SUPPORT)
    // - Authenticated users can create tickets.
    // - Users can only read/update their own tickets. Admins can read/update any.
    // - For 'list', admins can list all, users must query by their own userId.
    match /tickets/{ticketId} {
      allow create: if isAuth();
      allow get: if isOwner(resource.data.userId) || isAdmin();
      allow list: if (request.query.limit <= 100 && request.query.offset == null) && (isAdmin() || (request.query.filters.size() > 0 && request.query.filters[0].field.string_value == 'userId' && request.query.filters[0].value.string_value == request.auth.uid));
      allow update: if isOwner(resource.data.userId) || isAdmin();
      
      // TICKET MESSAGES
      // - Users can only read/write messages in their own tickets.
      // - Admins can read/write messages in any ticket.
      match /messages/{messageId} {
        function isTicketOwner() {
          return get(/databases/$(database)/documents/tickets/$(ticketId)).data.userId == request.auth.uid;
        }
        
        allow read, write: if isTicketOwner() || isAdmin();
      }
    }
  }
}
