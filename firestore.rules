
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Regras para perfis de usuário
    match /users/{userId} {
      // Admins podem ler qualquer perfil. Usuários podem ler seu próprio perfil ou perfis de colegas de equipe.
      allow get: if request.auth.token.admin == true || request.auth.uid == userId ||
                 (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId != null &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == resource.data.teamId);
                  
      // Admins podem listar todos os usuários. Gerentes podem listar usuários de sua equipe.
      allow list: if request.auth.token.admin == true || 
                   (request.auth.uid != null && request.query.where[0][1] == "teamId" && request.query.where[0][2] == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId);

      // Usuários podem atualizar seu próprio perfil. Admins podem atualizar qualquer perfil.
      // Gerentes podem atualizar perfis de membros de sua equipe.
      allow update: if request.auth.token.admin == true || request.auth.uid == userId ||
                  (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId != null &&
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == resource.data.teamId);

      allow create: if request.auth.uid != null;
      allow delete: if request.auth.token.admin == true;

      // Subcoleção de notificações
      match /notifications/{notificationId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }

    // Regras para Webhooks
    match /webhookResponses/{responseId} {
      allow read, write, create: if true; // Aberto para receber webhooks
    }

    // Regras para Times
    match /teams/{teamId} {
      // Membros da equipe podem ler os dados da equipe. Apenas o gerente pode escrever.
      allow read: if request.auth.uid == resource.data.managerId || exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
      allow write: if request.auth.uid == resource.data.managerId;
    }

    // Regras para Logs de Atividade
    match /activityLogs/{logId} {
      // Apenas administradores podem ler todos os logs. A criação é feita via server-side.
      allow read, list: if request.auth.token.admin == true;
      allow create: if true; // Ação de servidor
    }
    
    // Regras para Lotes (Batches)
    match /batches/{batchId} {
      // Usuários podem ler e escrever em seus próprios lotes. Admins podem ler todos.
      allow read, write: if request.auth.token.admin == true || request.auth.uid == resource.data.userId;
    }

    // Regras para Chamados de Suporte
    match /tickets/{ticketId} {
      // Admins podem ler/escrever. Usuários podem ler/escrever seus próprios chamados.
      allow read, write: if request.auth.token.admin == true || (resource.data.userId != null && request.auth.uid == resource.data.userId);

      // Regras para as mensagens dentro de um chamado
      match /messages/{messageId} {
        // As mesmas permissões do chamado pai se aplicam aqui.
        allow read, write, create: if request.auth.token.admin == true || (exists(/databases/$(database)/documents/tickets/$(ticketId)) && get(/databases/$(database)/documents/tickets/$(ticketId)).data.userId == request.auth.uid);
      }
    }

    // Coleção interna para contadores (ex: número do chamado)
    match /internal/{docId} {
      allow read, write: if request.auth.token.admin == true; // Apenas admins ou funções de servidor
    }
  }
}
