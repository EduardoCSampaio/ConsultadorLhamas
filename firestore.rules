rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Matches any document in the 'users' collection.
    match /users/{userId} {
      // Only the authenticated user can read or write to their own profile.
      allow read, write: if isOwner(userId);
    }
    
    // Matches any document in the 'activityLogs' collection.
    match /activityLogs/{logId} {
        // Admins can read all logs. Users can read their own.
        allow list: if isAdmin() || (request.query.where.userId == request.auth.uid);
        allow get: if isAdmin() || isOwner(resource.data.userId);
        // Only backend can create logs
        allow create: if false;
        allow update, delete: if false;
    }
    
     // Matches any document in the 'batches' collection.
    match /batches/{batchId} {
        // Users can only read/write their own batches
        allow read, write: if isOwner(resource.data.userId);
    }

    // Matches any document in the 'tickets' collection.
    match /tickets/{ticketId} {
      // CREATE: Any authenticated user can create a ticket for themselves.
      allow create: if request.auth != null && isOwner(request.resource.data.userId);
      
      // READ, UPDATE: Allow if the user is the owner or an admin.
      allow read, update: if isAdmin() || (resource.data.userId == request.auth.uid);
      
      // DELETE: Only admins can delete tickets.
      allow delete: if isAdmin();

      // Subcollection: messages
      match /messages/{messageId} {
        // READ, WRITE: Allow if user has access to the parent ticket.
        // This rule is inherited, but we make it explicit for clarity.
        allow read, write: if exists(/databases/$(database)/documents/tickets/$(ticketId)) && (
          (get(/databases/$(database)/documents/tickets/$(ticketId)).data.userId == request.auth.uid) || isAdmin()
        );
      }
    }
    
    // Default deny all other collections/documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
