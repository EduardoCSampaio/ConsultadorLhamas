rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Regras de Admin: Admins podem ler e escrever em qualquer lugar.
    match /{document=**} {
      allow read, write: if request.auth.token.admin == true;
    }
    
    match /users/{userId} {
      // PERMISSÃO DE LEITURA (GET):
      // 1. Admins podem ler qualquer perfil.
      // 2. Um usuário pode ler seu próprio perfil.
      // 3. Um usuário pode ler o perfil de outro se ambos pertencerem ao mesmo time (e o time não for nulo).
      allow get: if request.auth.token.admin == true || request.auth.uid == userId ||
                  (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId != null &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == resource.data.teamId);

      // PERMISSÃO DE ESCRITA (CREATE, UPDATE, DELETE):
      // 1. Admins podem escrever em qualquer perfil.
      // 2. Um usuário pode atualizar seu próprio perfil.
      // 3. Um gerente pode atualizar o perfil de um usuário se for o gerente da equipe desse usuário.
      allow write: if request.auth.token.admin == true || request.auth.uid == userId ||
                  (resource.data.teamId != null && 
                   request.auth.uid == get(/databases/$(database)/documents/teams/$(resource.data.teamId)).data.managerId);

      // Qualquer usuário autenticado pode se criar (no cadastro inicial).
      allow create: if request.auth.uid != null;
      
      // Regras para a subcoleção de notificações
      match /notifications/{notificationId} {
        // Permite que um usuário leia e escreva seus próprios documentos de notificação
        allow read, write, delete: if request.auth.uid == userId;
      }
      // Permite que um usuário liste sua própria coleção de notificações
      allow list: if request.auth.uid == userId;
    }

    match /teams/{teamId} {
      // Permite que o gerente da equipe leia ou atualize o documento da equipe.
      allow read, write: if request.auth.uid == resource.data.managerId;
    }

    match /activityLogs/{logId} {
      // Apenas administradores podem ler os logs. A escrita é feita via server-side (actions).
      allow read: if request.auth.token.admin == true;
      allow write: if false; // Ninguém pode escrever diretamente, só via actions.
    }
    
    match /batches/{batchId} {
      // Usuários só podem ler/escrever em seus próprios lotes.
      allow read, delete: if request.auth.uid == resource.data.userId;
      // Escrita é feita via actions.
      allow write: if false;
    }
    
    match /tickets/{ticketId} {
      // Admins podem ler qualquer ticket. Usuários podem ler seus próprios tickets.
      allow read, write: if request.auth.token.admin == true || request.auth.uid == resource.data.userId;
      
      match /messages/{messageId} {
        // As mesmas regras do ticket pai se aplicam às mensagens.
         allow read, write: if request.auth.token.admin == true || request.auth.uid == get(/databases/$(database)/documents/tickets/$(ticketId)).data.userId;
      }
    }
    
    // Ninguém pode ler a coleção de respostas do webhook diretamente, apenas via server actions.
    match /webhookResponses/{responseId} {
        allow read, write: if false;
    }

  }
}
