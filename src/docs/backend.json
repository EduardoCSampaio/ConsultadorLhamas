

{
  "entities": {
    "WebhookResponse": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WebhookResponse",
      "type": "object",
      "description": "Represents the response received from a webhook.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the webhook response."
        },
        "status": {
          "type": "string",
          "description": "The status of the webhook response (e.g., pending, completed, failed)."
        },
        "message": {
          "type": "string",
          "description": "A descriptive message associated with the webhook response."
        },
        "initialResponse": {
          "type": "string",
          "description": "The initial response from the service that triggered the webhook."
        },
        "responseBody": {
          "type": "object",
          "description": "The full response body received from the webhook endpoint."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the webhook response was received.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "status",
        "message"
      ]
    },
    "UserProfile": {
      "title": "User Profile",
      "description": "Stores user profile information, including their role and status.",
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "description": "The user's unique ID from Firebase Authentication."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The user's email address."
        },
        "role": {
          "type": "string",
          "enum": [
            "admin",
            "user"
          ],
          "description": "The user's role in the system. The 'admin' role is primarily managed via custom claims."
        },
        "status": {
          "type": "string",
          "enum": [
            "pending",
            "active",
            "rejected",
            "inactive"
          ],
          "description": "The current status of the user's account."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user profile was created."
        },
        "v8_username": {
            "type": "string",
            "description": "Username for the V8 API integration."
        },
        "v8_password": {
            "type": "string",
            "description": "Password for the V8 API integration (should be stored securely)."
        },
        "v8_audience": {
            "type": "string",
            "description": "Audience for the V8 API integration."
        },
        "v8_client_id": {
            "type": "string",
            "description": "Client ID for the V8 API integration."
        },
        "facta_username": {
            "type": "string",
            "description": "Username for the Facta API integration."
        },
        "facta_password": {
            "type": "string",
            "description": "Password for the Facta API integration (should be stored securely)."
        }
      },
      "required": [
        "uid",
        "email",
        "role",
        "status",
        "createdAt"
      ]
    },
    "ActivityLog": {
        "title": "Activity Log",
        "description": "Stores a record of user actions within the application.",
        "type": "object",
        "properties": {
            "userId": {
                "type": "string",
                "description": "The UID of the user who performed the action."
            },
            "userEmail": {
                "type": "string",
                "description": "The email of the user for easy reference."
            },
            "action": {
                "type": "string",
                "description": "A description of the action performed (e.g., 'Consulta FGTS')."
            },
            "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp when the action occurred."
            }
        },
        "required": ["userId", "userEmail", "action", "createdAt"]
    },
    "BatchJob": {
        "title": "Batch Job",
        "description": "Represents a batch processing job for FGTS queries.",
        "type": "object",
        "properties": {
            "id": { "type": "string" },
            "userId": { "type": "string" },
            "fileName": { "type": "string" },
            "provider": { "type": "string" },
            "status": { "type": "string", "enum": ["processing", "completed", "error"] },
            "totalCpfs": { "type": "number" },
            "processedCpfs": { "type": "number" },
            "message": { "type": "string" },
            "createdAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "userId", "status", "totalCpfs", "processedCpfs", "createdAt"]
    },
    "CLTConsent": {
        "title": "CLT Consent",
        "description": "Represents the consent term data for a CLT credit consultation.",
        "type": "object",
        "properties": {
            "consultationId": { "type": "string" },
            "borrowerDocumentNumber": { "type": "string" },
            "gender": { "type": "string", "enum": ["male", "female"] },
            "birthDate": { "type": "string", "format": "date" },
            "signerName": { "type": "string" },
            "signerEmail": { "type": "string", "format": "email" },
            "signerPhone": { 
                "type": "object",
                "properties": {
                    "countryCode": { "type": "string" },
                    "areaCode": { "type": "string" },
                    "phoneNumber": { "type": "string" }
                }
            },
            "provider": { "type": "string" },
            "userId": { "type": "string" },
            "createdAt": { "type": "string", "format": "date-time" }
        },
        "required": ["consultationId", "borrowerDocumentNumber", "userId", "createdAt"]
    },
    "SimulationConfig": {
      "title": "Simulation Config",
      "description": "Configuration for a CLT credit simulation.",
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "slug": { "type": "string" },
        "monthly_interest_rate": { "type": "string" },
        "number_of_installments": { "type": "array", "items": { "type": "string" } }
      }
    },
    "SimulationResult": {
      "title": "Simulation Result",
      "description": "The result of a CLT credit simulation.",
      "type": "object",
      "properties": {
        "id_simulation": { "type": "string" },
        "installment_value": { "type": "number" },
        "number_of_installments": { "type": "number" },
        "operation_amount": { "type": "number" },
        "disbursement_amount": { "type": "number" },
        "monthly_interest_rate": { "type": "number" },
        "disbursement_option": {
          "type": "object",
          "properties": {
            "cet": { "type": "number" },
            "first_due_date": { "type": "string", "format": "date" }
          }
        }
      }
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ],
    "customClaims": {
      "admin": {
        "type": "boolean"
      }
    }
  },
  "firestore": {
    "/webhookResponses/{webhookResponseId}": {
      "schema": {
        "$ref": "#/entities/WebhookResponse"
      },
      "description": "Stores webhook responses. The webhookResponseId is the unique ID for each response."
    },
    "/users/{userId}": {
      "schema": {
        "$ref": "#/entities/UserProfile"
      },
      "description": "Stores user profiles. The userId is the same as the Firebase Auth UID."
    },
    "/activityLogs/{logId}": {
        "schema": {
            "$ref": "#/entities/ActivityLog"
        },
        "description": "Stores records of user activities for auditing and dashboard metrics."
    },
    "/batches/{batchId}": {
        "schema": { "$ref": "#/entities/BatchJob" },
        "description": "Stores the state and progress of a batch processing job."
    },
    "/cltConsents/{consentId}": {
        "schema": { "$ref": "#/entities/CLTConsent" },
        "description": "Stores generated CLT consent terms."
    }
  }
}

    